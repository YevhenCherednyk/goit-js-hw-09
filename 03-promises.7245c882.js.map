{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,UAkBlC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAIFS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,EAAArB,GAASsB,OAAOC,QAAQL,E,IAEzBM,OAAM,SAAAC,GACLN,QAAQC,IAAIK,GACZJ,EAAArB,GAASsB,OAAOI,QAAQD,E,IAnC9BvB,EAAKC,QAAQwB,iBAAiB,UAE9B,SAAoBC,GAClBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAO7B,EAAKC,QAAQK,MAAMU,OACrCc,EAAYD,OAAO7B,EAAKC,QAAQ8B,KAAKf,OACrCgB,EAAiBH,OAAO7B,EAAKC,QAAQgC,OAAOjB,OAEzCkB,EAAI,EAAGA,GAAKF,EAAgBE,GAAK,EACxC9B,EAAc8B,EAAGN,GACjBA,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n};\n\nrefs.formRef.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(evt) {\n  evt.preventDefault();\n\n  let firstDelay = Number(refs.formRef.delay.value);\n  const delayStep = Number(refs.formRef.step.value);\n  const promisesAmount = Number(refs.formRef.amount.value);\n\n  for (let i = 1; i <= promisesAmount; i += 1) {\n    createPromise(i, firstDelay);\n    firstDelay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(value => {\n      console.log(value);\n      Notiflix.Notify.success(value);\n    })\n    .catch(error => {\n      console.log(error);\n      Notiflix.Notify.failure(error);\n    });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","value","console","log","$parcel$interopDefault","Notify","success","catch","error","failure","addEventListener","evt","preventDefault","firstDelay","Number","delayStep","step","promisesAmount","amount","i"],"version":3,"file":"03-promises.7245c882.js.map"}